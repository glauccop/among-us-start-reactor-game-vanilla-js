name: Servicenow_ChangeDevOps deployment

on:
  #push:
  #  branches: [main]
  #pull_request:
  #  branches: [main]

  workflow_dispatch:

jobs:
  build:
    runs-on: ubuntu-latest
    steps:
      - name: Build
        run: echo Building the app

  # deploy desenvolvimento
  deploy-development:
    runs-on: ubuntu-latest
    environment:
      name: development
      url: ${{vars.URL}}
    needs: build
    steps:
      - name: Repo Checkout
        uses: actions/checkout@v1
      - name: Hostinger Deployment
        uses: easingthemes/ssh-deploy@main
        with:
          SSH_PRIVATE_KEY: ${{secrets.HOSTINGER_SSH_KEY}}
          ARGS: "-rlgoDzvc --delete"
          SOURCE: "public/"
          REMOTE_HOST: ${{vars.REMOTE_HOST}}
          REMOTE_USER: ${{vars.REMOTE_USER}}
          REMOTE_PORT: ${{vars.REMOTE_PORT}}
          TARGET: ${{vars.TARGET}}

  # deploy staging
  deploy-staging:
    runs-on: ubuntu-latest
    environment:
      name: staging
      url: ${{vars.URL}}
    needs: deploy-development
    steps:
      - name: Repo Checkout
        uses: actions/checkout@v1
      - name: Hostinger Deployment
        uses: easingthemes/ssh-deploy@main
        with:
          SSH_PRIVATE_KEY: ${{secrets.HOSTINGER_SSH_KEY}}
          ARGS: "-rlgoDzvc --delete"
          SOURCE: "public/"
          REMOTE_HOST: ${{vars.REMOTE_HOST}}
          REMOTE_USER: ${{vars.REMOTE_USER}}
          REMOTE_PORT: ${{vars.REMOTE_PORT}}
          TARGET: ${{vars.TARGET}}

  # cria a change DevOps no ServiceNow
  deploy-change:
    name: ServiceNow-ChangeDevOps
    needs: deploy-staging
    runs-on: ubuntu-latest

    steps:
      - name: ServiceNow DevOps Change Approval
        uses: ServiceNow/servicenow-devops-change@v6.0.0
        id: create
        with:
          ##devops-integration-user-name: ${{ vars.SN_DEVOPS_USER }}
          ##devops-integration-user-password: ${{ secrets.SN_DEVOPS_PASSWORD }}
          devops-integration-token: ${{ secrets.SN_DEVOPS_INTEGRATION_TOKEN }}
          instance-url: ${{ vars.SN_INSTANCE_URL }}
          tool-id: ${{ vars.SN_ORCHESTRATION_TOOL_ID }}
          context-github: ${{ toJSON(github) }}
          job-name: 'ServiceNow Change Approval'
          change-request: >-
            {
              "setCloseCode":"true",
              "attributes":{
              "short_description":"Novo deploy App AmongUs",
              "description":"Aguardando aprovação no ServiceNow",
              "assignment_group":"68fab70e47b81250bda7e49b506d43ac",
              "implementation_plan":"Procedimento CI/CD DevOps",
              "backout_plan":"Restaurar versão anterior",
              "test_plan":"Plano de teste referenciado no KB0000001"
              }
            }
          interval: '100'
          timeout: '3600'
          changeCreationTimeOut: '3600'
          #abortOnChangeCreationFailure: true
          #abortOnChangeStepTimeout: true
      - name: Output of Change Creation
        run: echo "change-request-number = ${{ steps.create.outputs.change-request-number }} and change-request-sys-id = ${{ steps.create.outputs.change-request-sys-id }} " >> $GITHUB_OUTPUT
        # deployment-gate: '{"environment":"deployment_gate","jobName":"Deploy"}'

  # deploy production
  deploy-production:
    runs-on: ubuntu-latest
    environment:
      name: production
      url: ${{vars.URL}}
    needs: deploy-change
    steps:
      - name: Repo Checkout
        uses: actions/checkout@v1
      - name: Hostinger Deployment
        uses: easingthemes/ssh-deploy@main
        with:
          SSH_PRIVATE_KEY: ${{secrets.HOSTINGER_SSH_KEY}}
          ARGS: "--exclude=/dev --exclude=/stage -rlgoDzvc --delete"
          SOURCE: "public/"
          REMOTE_HOST: ${{vars.REMOTE_HOST}}
          REMOTE_USER: ${{vars.REMOTE_USER}}
          REMOTE_PORT: ${{vars.REMOTE_PORT}}
          TARGET: ${{vars.TARGET}}
