name: game.optometria.store deployment

on:
  push:
    branches: [main]
  pull_request:
    branches: [main]

  workflow_dispatch:

jobs:
  build:
    runs-on: ubuntu-latest
    steps:
      - name: Build
        run: echo Building the app

  # deploy desenvolvimento
  deploy-development:
    runs-on: ubuntu-latest
    environment:
      name: development
      url: ${{vars.URL}}
    needs: build
    steps:
      - name: Repo Checkout
        uses: actions/checkout@v1
      - name: Hostinger Deployment
        uses: easingthemes/ssh-deploy@main
        with:
          SSH_PRIVATE_KEY: ${{secrets.HOSTINGER_SSH_KEY}}
          ARGS: "-rlgoDzvc --delete"
          SOURCE: "public/"
          REMOTE_HOST: ${{vars.REMOTE_HOST}}
          REMOTE_USER: ${{vars.REMOTE_USER}}
          REMOTE_PORT: ${{vars.REMOTE_PORT}}
          TARGET: ${{vars.TARGET}}

  # deploy staging
  deploy-staging:
    runs-on: ubuntu-latest
    environment:
      name: staging
      url: ${{vars.URL}}
    needs: deploy-development
    steps:
      - name: Repo Checkout
        uses: actions/checkout@v1
      - name: Hostinger Deployment
        uses: easingthemes/ssh-deploy@main
        with:
          SSH_PRIVATE_KEY: ${{secrets.HOSTINGER_SSH_KEY}}
          ARGS: "-rlgoDzvc --delete"
          SOURCE: "public/"
          REMOTE_HOST: ${{vars.REMOTE_HOST}}
          REMOTE_USER: ${{vars.REMOTE_USER}}
          REMOTE_PORT: ${{vars.REMOTE_PORT}}
          TARGET: ${{vars.TARGET}}

  # cria a change DevOps no ServiceNow
  #create-servicenow-change:
  #  runs-on: ubuntu-latest
  #  needs: deploy-staging
  #  steps:
  #    - name: Criar Change Request no ServiceNow
  #      uses: ServiceNow/servicenow-devops-change@v6.0.0
  #      id: change
  #      with:
  #        devops-integration-token: ${{ secrets.SN_DEVOPS_INTEGRATION_TOKEN }}
  #        instance-url: ${{ secrets.SN_INSTANCE_URL }}
  #        tool-id: ${{ secrets.SN_ORCHESTRATION_TOOL_ID }}
  #        context-github: ${{ toJSON(github) }}
  #        job-name: 'create-servicenow-change'
  #        change-request: >-
  #          {
  #            "setCloseCode": "true",
  #            "autoCloseChange": false,
  #            "attributes": {
  #              "short_description": "Deploy para Produção",
  #              "description": "Deploy aguardando aprovação no ServiceNow",
  #              "assignment_group": "SEU_SYS_ID_DO_GRUPO",
  #              "implementation_plan": "Seguir plano padrão",
  #              "backout_plan": "Reverter via último backup",
  #              "test_plan": "Validação no staging finalizada"
  #            }
  #          }
#
 #     - name: Exibir número da Change
  #      run: echo "Change: ${{ steps.change.outputs.change-request-number }}"

  # deploy production
  deploy-production:
    runs-on: ubuntu-latest
    environment:
      name: production
      url: ${{vars.URL}}
    needs: deploy-staging
    steps:
      - name: Repo Checkout
        uses: actions/checkout@v1
      - name: Hostinger Deployment
        uses: easingthemes/ssh-deploy@main
        with:
          SSH_PRIVATE_KEY: ${{secrets.HOSTINGER_SSH_KEY}}
          ARGS: "--exclude=/dev --exclude=/stage -rlgoDzvc --delete"
          SOURCE: "public/"
          REMOTE_HOST: ${{vars.REMOTE_HOST}}
          REMOTE_USER: ${{vars.REMOTE_USER}}
          REMOTE_PORT: ${{vars.REMOTE_PORT}}
          TARGET: ${{vars.TARGET}}
